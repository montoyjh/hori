(dp0
S'vibrations'
p1
cnumpy.core.multiarray
_reconstruct
p2
(cnumpy
ndarray
p3
(I0
tp4
S'b'
p5
tp6
Rp7
(I1
(I9
tp8
cnumpy
dtype
p9
(S'c16'
p10
I0
I1
tp11
Rp12
(I3
S'<'
p13
NNNI-1
I-1
I0
tp14
bI00
S'\x00\x00\x00\x00\x00\x00\x00\x000\xc1\x04!"\xac\x85?\x00\x00\x00\x00\x00\x00\x00\x00p\xe3\x13Q\xaa\xc6\x82?\x00\x00\x00\x00\x00\x00\x00\x00\xaa\x1e_\'2\xa5{?\x00\x00\x00\x00\x00\x00\x00\x00{\x16\xb8\xcf\t(r?\x00\x00\x00\x00\x00\x00\x00\x00\xe2P\xee \x03\xb5q? \xc0y\x88\x06\xc6\xb3?\x00\x00\x00\x00\x00\x00\x00\x00\x14\xbf2\xbf\x93\xd4\xb3?\x00\x00\x00\x00\x00\x00\x00\x00\xbf\t\xa6\x94\xa8R\xc5?\x00\x00\x00\x00\x00\x00\x00\x00h\x97\xfd\xab7y\xd3?\x00\x00\x00\x00\x00\x00\x00\x00'
p15
tp16
bsS'author'
p17
S'jvarley'
p18
sS'electronic energy'
p19
F-1029.99865473
sS'version'
p20
I2
sS'calculation script'
p21
S"#!/usr/bin/env python\n\n#LSF -q suncat-medium\n#LSF -n 8\n#LSF -o std.out\n#LSF -e std.err\n#LSF -N\n\nfrom numpy import sqrt, pi\nfrom numpy import arctan as atan\n\nfrom ase import Atoms, Atom\nfrom ase import io\nfrom ase import view\nfrom ase.data.molecules import molecule as molecule\nfrom ase.calculators import *\nfrom ase.constraints import FixAtoms\nfrom ase.calculators.jacapo import Jacapo\nfrom ase.optimize import QuasiNewton\nfrom ase.data import covalent_radii, atomic_numbers\nfrom ase.vibrations import Vibrations\nfrom ase.thermochemistry import IdealGasThermo\n\nbasename = 'CO2'\natoms = molecule(basename)\na = 20.0 # cell-size\natoms.set_cell((a,a,a))\natoms.center()\n\ncalc = Jacapo(nc='out.nc', #nc output file\n              pw=340.15, #planewave cutoff\n              dw=500.00, #density cutoff\n              nbands=None, # number of bands\n              kpts=(1,1,1), # k points\n              xc='RPBE', #exchange correlation method\n              ft=0.01, #Fermi temperature\n              #              symmetry=True,\n              ncoutput={'wf':'No',\n                        'cd':'No',\n                        'efp':'No',\n                        'esp':'No'},\n              convergence={'energy':0.00001,\n                           'density':0.0001,\n                           'occupation':0.001,\n                           'maxsteps':None,\n                           'maxtime':None},\n              spinpol=True,\n              stay_alive=True,\n             )\n\natoms.set_calculator(calc)\n\ndyn = QuasiNewton(atoms, logfile=basename+'.log', trajectory=basename+'.traj')\ndyn.run(fmax=0.05)\n\nelectronicenergy = atoms.get_potential_energy()\nf = open('out.energy','w')\nf.write(str(electronicenergy))\nf.close()\n\n################################\n##### VIBRATIONAL ANALYSIS #####\n################################\nvib = Vibrations(atoms)\nvib.run()\nvib.summary()\n\nfor j in range(3*len(atoms)):\n    vib.write_mode(j)\n\nvib_energies = vib.get_energies()\nf = open('out.vib_energy','w')\nf.write(str(vib_energies))\nf.close()\n\n################################\n# CO2 linear molecule with D_*h symmetry -> has number n=2\n################################\nthermo = IdealGasThermo(vib_energies=vib_energies,\n                        electronicenergy=electronicenergy, atoms=atoms,\n                        geometry='linear', symmetrynumber=2, spin=0)\nG = thermo.get_free_energy(temperature=298.15, pressure=101325.)\n\nf = open('out.gibbs_energy','w')\nf.write(str(G))\nf.close()\n"
p22
sS'atomslist'
p23
(lp24
(S'C'
p25
g2
(g3
(I0
tp26
g5
tp27
Rp28
(I1
(I3
tp29
g9
(S'f8'
p30
I0
I1
tp31
Rp32
(I3
S'<'
p33
NNNI-1
I-1
I0
tp34
bI00
S'\xdd\xdc\x01\x00\x00\x00$@\xde\xdc\x01\x00\x00\x00$@*V\xff\xff\xff\xff#@'
p35
tp36
btp37
a(S'O'
p38
g2
(g3
(I0
tp39
g5
tp40
Rp41
(I1
(I3
tp42
g32
I00
S'L\x1e\x06\x00\x00\x00$@J\x1e\x06\x00\x00\x00$@\xa5\x13\x05A\xec\\&@'
p43
tp44
btp45
a(g38
g2
(g3
(I0
tp46
g5
tp47
Rp48
(I1
(I3
tp49
g32
I00
S'M\x1e\x06\x00\x00\x00$@Q\x1e\x06\x00\x00\x00$@\xfdZ\x04\xbf\x13\xa3!@'
p50
tp51
btp52
asS'path'
p53
S'/a/suncatfs1/u1/jvarley/calculations/references/CO2/jacapo'
p54
s.