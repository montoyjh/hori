(dp0
S'vibrations'
p1
cnumpy.core.multiarray
_reconstruct
p2
(cnumpy
ndarray
p3
(I0
tp4
S'b'
p5
tp6
Rp7
(I1
(I24
tp8
cnumpy
dtype
p9
(S'c16'
p10
I0
I1
tp11
Rp12
(I3
S'<'
p13
NNNI-1
I-1
I0
tp14
bI00
S'\x00\x00\x00\x00\x00\x00\x00\x00\xac\xb7\xf8w&\xbe\x87?\x00\x00\x00\x00\x00\x00\x00\x00[\x08\x7f\xf4\xe3\x84\x81?\x00\x00\x00\x00\x00\x00\x00\x00\xac0\xc8\xb3\x9f\xfei?!\x17\xc9x\x98\xaao?\x00\x00\x00\x00\x00\x00\x00\x00\xa9Y\x8beG\xacw?\x00\x00\x00\x00\x00\x00\x00\x00i]\x06\x18\xa9\xf1\x80?\x00\x00\x00\x00\x00\x00\x00\x00.\xb1=\x0f\x06\x13\x86?\x00\x00\x00\x00\x00\x00\x00\x00\x1b\xed$\x8e\x18\xb8\x9b?\x00\x00\x00\x00\x00\x00\x00\x00\xaa\x9f*\x1b\x94\xb1\xa4?\x00\x00\x00\x00\x00\x00\x00\x00\xd1\x18e\xda\x80n\xb0?\x00\x00\x00\x00\x00\x00\x00\x00\x85"\xabS\xb9\xed\xb4?\x00\x00\x00\x00\x00\x00\x00\x00T\xce\x10\xbf\x07U\xbf?\x00\x00\x00\x00\x00\x00\x00\x00\xe5\'\xb0\x96\x98\x11\xc0?\x00\x00\x00\x00\x00\x00\x00\x00\xd9\xb9\x06\xd3\xf4\xbd\xc0?\x00\x00\x00\x00\x00\x00\x00\x00$B\x8e3*\x8c\xc2?\x00\x00\x00\x00\x00\x00\x00\x00\x8d\x1d\xb2\xe7\xb7\x93\xc4?\x00\x00\x00\x00\x00\x00\x00\x00\xdf\r\xec\xc2\xe1%\xc5?\x00\x00\x00\x00\x00\x00\x00\x00{\x04\xd9\x1b\xcc\x81\xc5?\x00\x00\x00\x00\x00\x00\x00\x00\x80\xfc\x8e\xde\x10K\xc6?\x00\x00\x00\x00\x00\x00\x00\x003\xf4x\xee\xf6j\xcc?\x00\x00\x00\x00\x00\x00\x00\x00\xfe\x96\x8bC]e\xd6?\x00\x00\x00\x00\x00\x00\x00\x00\x96\x86\xe9\xe6\x14\x8e\xd7?\x00\x00\x00\x00\x00\x00\x00\x00\xbc#3\x98\xe1+\xd8?\x00\x00\x00\x00\x00\x00\x00\x00\xe0n\x859\xae\xa0\xde?\x00\x00\x00\x00\x00\x00\x00\x00'
p15
tp16
bsS'author'
p17
S'AAP'
p18
sS'electronic energy'
p19
F-1248.8907140700001
sS'version'
p20
I2
sS'calculation script'
p21
S"#!/usr/bin/env python\n\n#LSF -q suncat-medium -o opt.log -n 8\n\nfrom ase.all import *\nfrom ase.calculators import jacapo as jp\nfrom ase.vibrations import Vibrations\nimport numpy as np\n\nmolecule = read('gpinit.traj')\n\n# Create the molecule\ncell=[15.0,15.1,15.2]\n\nmolecule.set_cell(cell)\nmolecule.center()\n\n# Slight rotation to break any artificial symmetry.\nmolecule.rotate('x',pi/34.)\nmolecule.rotate('y',pi/35.)\nmolecule.rotate('z',pi/36.)\nmolecule.rattle()\n\n\ncalc = jp.Jacapo(nc='out.nc', #nc output file\n                 pw=340.15, #planewave cutoff\n                 dw=500.00, #density cutoff\n                 nbands=15, # number of bands\n                 kpts=(1,1,1), # k points\n                 xc='RPBE', #exchange correlation method\n                 ft=0.01, #Fermi temperature\n                 symmetry=False,\n                 spinpol=False,\n                 stay_alive=True,\n                 dipole={'status':True,\n                         'mixpar':0.2,\n                         'initval':0.0},\n                )\n# calc.set_psp(sym='Pb',psp='/home/camp/anpet/common/uspp/pb_ps.uspp')\n# ^ what is this?\n\nmolecule.set_calculator(calc)\n\n# Manually set nbands to be at least 10 (otherwise use same formula).\n# This is because otherwise H2 won't converge with 5 bands.\n#nvalence = calc.get_valence()\n#nbands = calc.get_valence()*0.65 + 4\n#nbands = np.ceil(nbands)\n#if nbands < 10:\n#    nbands = 10\n#calc.set_nbands(nbands)\n\ndyn = QuasiNewton(molecule,logfile='qn.log',trajectory='qn.traj')\ndyn.run(fmax=0.05)\n\ne_adsorbed = molecule.get_potential_energy()\nprint e_adsorbed\n\nf = open('out.energy','w')\nf.write(str(e_adsorbed))\nf.close()\n\n\n# Calculate vibrations\nvib = Vibrations(molecule)\nvib.run()\nvib.summary(method='standard')\n\n# Make trajectory files to visualize the modes.\nfor mode in range(len(molecule)*3):\n    vib.write_mode(mode)\n\n\n"
p22
sS'atomslist'
p23
(lp24
(S'O'
p25
g2
(g3
(I0
tp26
g5
tp27
Rp28
(I1
(I3
tp29
g9
(S'f8'
p30
I0
I1
tp31
Rp32
(I3
S'<'
p33
NNNI-1
I-1
I0
tp34
bI00
S'\xb0\xbb\x18ivr\x17@i*\x0e\xce\x02%\x1d@\xf8\xc835:\x1e\x1d@'
p35
tp36
btp37
a(S'C'
p38
g2
(g3
(I0
tp39
g5
tp40
Rp41
(I1
(I3
tp42
g32
I00
S'\x89\x0e\x9ec\x1aY\x1b@4\xa6\xa6\xa7\xa17\x1f@\xef\xaer\x87~8\x1f@'
p43
tp44
btp45
a(S'H'
p46
g2
(g3
(I0
tp47
g5
tp48
Rp49
(I1
(I3
tp50
g32
I00
S'x\xd5\xbe\xc7\x93\x1e\x1b@\xb8\x9d\xed\xa0\x84\x88 @h\x0f\x1a1?\xa6!@'
p51
tp52
btp53
a(g25
g2
(g3
(I0
tp54
g5
tp55
Rp56
(I1
(I3
tp57
g32
I00
S'DJpo\'R"@\x9e\xb4\xc5\x92}A!@\xed!\xaa\xa5n\x92\x1f@'
p58
tp59
btp60
a(g38
g2
(g3
(I0
tp61
g5
tp62
Rp63
(I1
(I3
tp64
g32
I00
S'`\x9aq\xb6\xd0k @3\x0eZ-\xf7z\x1f@o\xb3u\xf7\x8b\x9d\x1c@'
p65
tp66
btp67
a(g46
g2
(g3
(I0
tp68
g5
tp69
Rp70
(I1
(I3
tp71
g32
I00
S'\x0b>L\xe4\xe3\x17!@cdz\xaa\xefV\x1b@TCZ\xca\xd9\xd5\x1b@'
p72
tp73
btp74
a(g46
g2
(g3
(I0
tp75
g5
tp76
Rp77
(I1
(I3
tp78
g32
I00
S'>m}F\xec4 @\xd5\x965\rt\xb5 @\x1ak\x88v\x19\xaf\x18@'
p79
tp80
btp81
a(g46
g2
(g3
(I0
tp82
g5
tp83
Rp84
(I1
(I3
tp85
g32
I00
S'\xfd\xa4\xb0\x11\x0b\x04#@y,|5\x93+ @\x9d\xf6\xde\x99\xd3A!@'
p86
tp87
btp88
asS'path'
p89
S'/a/suncatfs1/u1/montoyjh/MAIN/PAR_NEB/gas_phase_products/glycolaldehyde'
p90
s.