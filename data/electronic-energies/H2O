(dp0
S'vibrations'
p1
cnumpy.core.multiarray
_reconstruct
p2
(cnumpy
ndarray
p3
(I0
tp4
S'b'
p5
tp6
Rp7
(I1
(I9
tp8
cnumpy
dtype
p9
(S'c16'
p10
I0
I1
tp11
Rp12
(I3
S'<'
p13
NNNI-1
I-1
I0
tp14
bI00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x90\xaf\x17\xf63>\x95?\x00\x00\x00\x00\x00\x00\x00\x00\xa2\n\x99\x1f;\xe9\x8e?\x00\x00\x00\x00\x00\x00\x00\x00\x82t\x1f\x01\xb81\x88?\x00\x00\x00\x00\x00\x00\x00\x00\x8d\xe5\xdc7\xc8\\\x80?\xe3\x97T<\xf9\x87t?\x00\x00\x00\x00\x00\x00\x00\x00\x9d\xfd\x04\n6J\x8a?\x00\x00\x00\x00\x00\x00\x00\x00v\x0e[\xb2u\xed\xc8?\x00\x00\x00\x00\x00\x00\x00\x00\xbe\xf6q\xc3>m\xde?\x00\x00\x00\x00\x00\x00\x00\x00,\x17\x00Q4Y\xdf?\x00\x00\x00\x00\x00\x00\x00\x00'
p15
tp16
bsS'author'
p17
S'AAP'
p18
sS'electronic energy'
p19
F-469.72778587200003
sS'version'
p20
I2
sS'calculation script'
p21
S"#!/usr/bin/env python\n\n#LSF -q suncat-medium -o opt.log -n 16\n\nimport numpy as np\nfrom ase import io\nfrom ase import Atom, Atoms\nfrom ase.constraints import FixAtoms\nfrom ase.calculators.jacapo import Jacapo\nfrom ase.optimize import QuasiNewton\nfrom ase.data.molecules import molecule\nfrom ase import units\nfrom ase.io.trajectory import PickleTrajectory\nfrom ase.vibrations import Vibrations\nfrom ase.thermochemistry import HarmonicThermo, IdealGasThermo\n\nm = 0.0\na = 20.0\nc = a/2\nd = 1.0\n\natoms = Atoms('H2O',positions=([c - d / 2, c, c],[c + d, c, c],[c,c,c - d]),cell=(a,a,a))\n\natoms.write('input.traj')\n\ncalc = Jacapo(nc='out.nc', \n              pw=340.15, \n              dw=500.00,\n              kpts=(1,1,1),\n              xc='RPBE', \n              ft=0.01, \n              nbands=16,\n              spinpol=False,\n#              ncoutput={'wf':'No',\n#                        'cd':'No',\n#                        'efp':'No',\n#                        'esp':'No'},\n              dipole={'status':True,\n                      'mixpar':0.2,\n                      'initval':0.0},\n              )\n\natoms.set_calculator(calc)\n\ndyn = QuasiNewton(atoms=atoms, logfile='qn.log', trajectory='qn.traj')\n\ndyn.run(fmax=0.05) # fmax?\n\nenergy = atoms.get_potential_energy()\n\nvib = Vibrations(atoms,indices=[0,1,2],name='vib')\nvib.run()\nvibenergies=vib.get_energies()\n\ngibbs=IdealGasThermo(vibenergies,'nonlinear',electronicenergy=energy,atoms=atoms,symmetrynumber=2,spin=0.0)\nfreeenergy=gibbs.get_free_energy(300,3570)\n\nf = open('out.energy','w')\nf.write(str(energy)+'\\n'+str(freeenergy))\nf.close()\n"
p22
sS'atomslist'
p23
(lp24
(S'H'
p25
g2
(g3
(I0
tp26
g5
tp27
Rp28
(I1
(I3
tp29
g9
(S'f8'
p30
I0
I1
tp31
Rp32
(I3
S'<'
p33
NNNI-1
I-1
I0
tp34
bI00
S';s\xaf\xbc&\xd3"@T$\xac\xff\xff\xff#@(\x87\xea\xf5\xe9\xda#@'
p35
tp36
btp37
a(g25
g2
(g3
(I0
tp38
g5
tp39
Rp40
(I1
(I3
tp41
g32
I00
S'5\xe4\x1c\x8a\xde\xe7%@\xc12\xba\xff\xff\xff#@\x05\xc8\x198\xa4\x9b#@'
p42
tp43
btp44
a(S'O'
p45
g2
(g3
(I0
tp46
g5
tp47
Rp48
(I1
(I3
tp49
g32
I00
S'\x80\x8d\xbc:\xf7D$@\x96\xac\x94\x0b\x00\x00$@\x93\x002yf\x89"@'
p50
tp51
btp52
asS'path'
p53
S'/a/suncatfs1/u1/montoyjh/usr/pylib/pylib2/hori/data/H2O'
p54
s.