(dp0
S'remark'
p1
NsS'author'
p2
S'WJD'
p3
sS'electronic energy'
p4
F-60902.648168599997
sS'vibrations'
p5
cnumpy.core.multiarray
_reconstruct
p6
(cnumpy
ndarray
p7
(I0
tp8
S'b'
p9
tp10
Rp11
(I1
(I15
tp12
cnumpy
dtype
p13
(S'c16'
p14
I0
I1
tp15
Rp16
(I3
S'<'
p17
NNNI-1
I-1
I0
tp18
bI00
S'p\xdd\x1d\xaaB\xe1\x8e?\x00\x00\x00\x00\x00\x00\x00\x00\xd9\xea\xc4\t{\x82\x90?\x00\x00\x00\x00\x00\x00\x00\x00\xfa\x8bj\xa2%G\x93?\x00\x00\x00\x00\x00\x00\x00\x00\x98dy\x05k\xbd\x99?\x00\x00\x00\x00\x00\x00\x00\x00BE.(\x98\x14\x9a?\x00\x00\x00\x00\x00\x00\x00\x00\xa7\xcf\xe7\x81\xd3\xfe\x9b?\x00\x00\x00\x00\x00\x00\x00\x00\xd2}V%\xf0\xa3\xbe?\x00\x00\x00\x00\x00\x00\x00\x00\x9d\xb6f\xf5\xb8\xf4\xc1?\x00\x00\x00\x00\x00\x00\x00\x00\x94\xda=\x13\x14\xfd\xc1?\x00\x00\x00\x00\x00\x00\x00\x00\x82\xe3\\\xe6\x8e\xc0\xc6?\x00\x00\x00\x00\x00\x00\x00\x00\x1f\x91\xeem\xaa\x12\xc7?\x00\x00\x00\x00\x00\x00\x00\x00sI\x02\xe6\xc4"\xc7?\x00\x00\x00\x00\x00\x00\x00\x00\x150\xc5\xab\x84\x9a\xd7?\x00\x00\x00\x00\x00\x00\x00\x00S\xce\xe7*N\x17\xd8?\x00\x00\x00\x00\x00\x00\x00\x00\x8cO\xe9\xc8\xae#\xd8?\x00\x00\x00\x00\x00\x00\x00\x00'
p19
tp20
bsS'calculation script'
p21
S'#!/usr/bin/env python\n\n#PBS -q verylong\n#PBS -r n\n#PBS -l nodes=1:ppn=8\n#PBS -m a\n#PBS -M andypeterson@gmail.com\n#PBS -V\n\nfrom ase import read,view,FixAtoms,QuasiNewton\nfrom ase.calculators.jacapo import Jacapo\nfrom ase.vibrations import Vibrations\n\n\nname = "Cu100_CH3O_hollow"\nvibrateatoms = [36,37,38,39,40] # For free energy calculation\nfreeatoms = [27,28,29,30,31,32,33,34,35,36,37,38,39,40] # For optimization calculation\n\n# Open the slab with adsorbate from an old simulation.\nslab = read(\'CH3O_hollow.traj\')\n\n# Fix the atoms to not be optimized, give the rest random perturbations\n# to break any artificial symmetry.\nmask = [True for atom in slab]\nfor free in freeatoms: # free atoms for optimizer\n    mask[free] = False\nslab.set_constraint(FixAtoms(mask=mask))\n\n# Introduce random perturbations to the free atoms\n# NOTE: I removed this since it is not a standard part of ASE\n# but is a personal part of the code in AAP\'s modules\n#perturbfreeatoms(atoms=slab,max=0.05)\n\ncalc = Jacapo(nc=name + \'.nc\', #nc output file\n                 pw=340.15, #planewave cutoff\n                 dw=500.00, #density cutoff\n                 nbands=None, # number of bands\n                 kpts=(4,4,1), # k points\n                 xc=\'RPBE\', #exchange correlation method\n                 ft=0.1, #Fermi temperature\n                 symmetry=True,\n                 dipole=True,\n                 spinpol=False,\n                 stay_alive=True\n                )\ncalc.set_convergence()\ncalc.set_dipole(status=True, mixpar=0.2, initval=0.0)\ncalc.set_ncoutput(wf=\'No\',cd=\'No\',efp=\'No\',esp=\'No\')\n\nslab.set_calculator(calc)\n\ndyn = QuasiNewton(slab,logfile=\'out.log\',trajectory=\'out.traj\')\ndyn.run(fmax=0.05)\n\ne_adsorbed = slab.get_potential_energy()\nprint e_adsorbed\n\nf = open(name + \'.energy\',\'w\')\nf.write(str(e_adsorbed))\nf.close()\n\n\n# Calculate vibrations\nvib = Vibrations(slab,indices=vibrateatoms)\nvib.run()\nvib.summary(method=\'standard\')\n\n# Make trajectory files to visualize the modes.\nfor mode in range(len(vibrateatoms)*3):\n    vib.write_mode(mode)\n\n\n'
p22
sS'path'
p23
S'/home/camp/anpet/20100914_Cu_100_101/Cu100/CH3O_ads/hollow'
p24
s.