(dp0
S'electronic energy VASP'
p1
F-6.7590000000000003
sS'version'
p2
I2
sS'author'
p3
S'AAP'
p4
sS'electronic energy'
p5
F-32.031485950899999
sS'vibrations'
p6
cnumpy.core.multiarray
_reconstruct
p7
(cnumpy
ndarray
p8
(I0
tp9
S'b'
p10
tp11
Rp12
(I1
(I6
tp13
cnumpy
dtype
p14
(S'c16'
p15
I0
I1
tp16
Rp17
(I3
S'<'
p18
NNNI-1
I-1
I0
tp19
bI00
S"\x00\x00\x00\x00\x00\x00\x00\x00C\xef/\x88^p|?\xe8\x1d\xbb\x94\xe7\xbb\x97?\x00\x00\x00\x00\x00\x00\x00\x00\x826\x14\x96\xfe|\xa0?\x00\x00\x00\x00\x00\x00\x00\x00\x1b\x07\x82\xbc9\x17\xa2?\x00\x00\x00\x00\x00\x00\x00\x00'G\xc8=\x1f\x84\xa4?\x00\x00\x00\x00\x00\x00\x00\x00\x86\x02k\nS\x83\xe1?\x00\x00\x00\x00\x00\x00\x00\x00"
p20
tp21
bsS'calculation script'
p22
S"#!/usr/bin/env python\n\n#LSF -q suncat-short\n#LSF -n 8\n#LSF -o std.out\n#LSF -e std.err\n#LSF -N\n\nfrom numpy import sqrt, pi\nfrom numpy import arctan as atan\n\nfrom ase import Atoms, Atom\nfrom ase import io\nfrom ase import view\nfrom ase.data.molecules import molecule as molecule\nfrom ase.calculators import *\nfrom ase.constraints import FixAtoms\nfrom ase.calculators.jacapo import Jacapo\nfrom ase.optimize import QuasiNewton\nfrom ase.data import covalent_radii, atomic_numbers\nfrom ase.vibrations import Vibrations\nfrom ase.thermochemistry import IdealGasThermo\n\nbasename = 'H2'\natoms = molecule(basename)\na = 20.0 # cell-size\natoms.set_cell((a,a,a))\natoms.center()\n\ncalc = Jacapo(nc='out.nc', #nc output file\n              pw=340.15, #planewave cutoff\n              dw=500.00, #density cutoff\n              nbands=None, # number of bands\n              kpts=(1,1,1), # k points\n              xc='RPBE', #exchange correlation method\n              ft=0.01, #Fermi temperature\n              #              symmetry=True,\n              ncoutput={'wf':'No',\n                        'cd':'No',\n                        'efp':'No',\n                        'esp':'No'},\n              convergence={'energy':0.00001,\n                           'density':0.0001,\n                           'occupation':0.001,\n                           'maxsteps':None,\n                           'maxtime':None},\n              spinpol=False,\n              stay_alive=True,\n             )\n\natoms.set_calculator(calc)\n\ndyn = QuasiNewton(atoms, logfile=basename+'.log', trajectory=basename+'.traj')\ndyn.run(fmax=0.05)\n\nelectronicenergy = atoms.get_potential_energy()\nf = open('out.energy','w')\nf.write(str(electronicenergy))\nf.close()\n\n################################\n##### VIBRATIONAL ANALYSIS #####\n################################\nvib = Vibrations(atoms)\nvib.run()\nvib.summary()\n\nfor j in range(3*len(atoms)):\n    vib.write_mode(j)\n\nvib_energies = vib.get_energies()\nf = open('out.vib_energy','w')\nf.write(str(vib_energies))\nf.close()\n\n################################\n# S linear molecule with C_*v symmetry -> has number n=1\n################################\nthermo = IdealGasThermo(vib_energies=vib_energies,\n                        electronicenergy=electronicenergy, atoms=atoms,\n                        geometry='linear', symmetrynumber=1, spin=0)\nG = thermo.get_free_energy(temperature=298.15, pressure=101325.)\n\nf = open('out.gibbs_energy','w')\nf.write(str(G))\nf.close()\n"
p23
sS'atomslist'
p24
(lp25
(S'H'
p26
g7
(g8
(I0
tp27
g10
tp28
Rp29
(I1
(I3
tp30
g14
(S'f8'
p31
I0
I1
tp32
Rp33
(I3
S'<'
p34
NNNI-1
I-1
I0
tp35
bI00
S'\x05\xa5S\xf2\xb8|\x1e@&uA\x11\xe8\xe5\x1d@9\xd5\xb6:\xa8\xba\x1f@'
p36
tp37
btp38
a(g26
g7
(g8
(I0
tp39
g10
tp40
Rp41
(I1
(I3
tp42
g33
I00
S'\xa5\xf6\t\xf4\xe01\x1e@H-\x87\x82\xd4&\x1e@a^\x7f\x93v\xbd\x1c@'
p43
tp44
btp45
asS'path'
p46
S'/a/suncatfs1/u1/aap/niflheim/anpet/20091105_gas_vibrations/H2'
p47
s.