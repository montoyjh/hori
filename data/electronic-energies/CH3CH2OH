(dp0
S'vibrations'
p1
cnumpy.core.multiarray
_reconstruct
p2
(cnumpy
ndarray
p3
(I0
tp4
S'b'
p5
tp6
Rp7
(I1
(I27
tp8
cnumpy
dtype
p9
(S'c16'
p10
I0
I1
tp11
Rp12
(I3
S'<'
p13
NNNI-1
I-1
I0
tp14
bI00
S'\x00\x00\x00\x00\x00\x00\x00\x00\xd3h\xb1\xf4\x02nx?\x00\x00\x00\x00\x00\x00\x00\x00\xa0\x0f\xdfI\x0e\xa0p?\xa2\xd3\xd6q\xf2\x80p?\x00\x00\x00\x00\x00\x00\x00\x004\x80\xba\x9el\xb8v?\x00\x00\x00\x00\x00\x00\x00\x00\xd9\x81\xfd\x0bo,\x7f?\x00\x00\x00\x00\x00\x00\x00\x00d\xea\xca\xb9*\x1f\x87?\x00\x00\x00\x00\x00\x00\x00\x00o\x93\x9bO\x15\xb2\x9c?\x00\x00\x00\x00\x00\x00\x00\x00\xc5\xbd%Zg\xf2\xa1?\x00\x00\x00\x00\x00\x00\x00\x00\xbb\xe1\xb4s/\xfd\xa9?\x00\x00\x00\x00\x00\x00\x00\x00!.$\xbf\xbeM\xb9?\x00\x00\x00\x00\x00\x00\x00\x00\xd0\x9d\xfc"?\xa3\xbb?\x00\x00\x00\x00\x00\x00\x00\x00oM\xedLs\xc3\xbf?\x00\x00\x00\x00\x00\x00\x00\x00\xc7\xb6>\xfe\xd1\xf7\xc0?\x00\x00\x00\x00\x00\x00\x00\x00\x1b\xff-NL\x11\xc2?\x00\x00\x00\x00\x00\x00\x00\x00X/A\t\xfao\xc3?\x00\x00\x00\x00\x00\x00\x00\x00\xaa\x12P\x8fg\xe8\xc3?\x00\x00\x00\x00\x00\x00\x00\x00\xbb#Z\xb7Y\x84\xc5?\x00\x00\x00\x00\x00\x00\x00\x00\xd1\xd3\x8e<C(\xc6?\x00\x00\x00\x00\x00\x00\x00\x0072H&r\xc5\xc6?\x00\x00\x00\x00\x00\x00\x00\x00\xc8CX\xa7\xa2!\xc7?\x00\x00\x00\x00\x00\x00\x00\x00b;/.\xa9}\xc7?\x00\x00\x00\x00\x00\x00\x00\x00F\xd3\xe4V\x80T\xd7?\x00\x00\x00\x00\x00\x00\x00\x00\x8fY\x0e\x1a\xb7\x94\xd7?\x00\x00\x00\x00\x00\x00\x00\x00&\xbe\xaa\xb1\xa0\xd4\xd7?\x00\x00\x00\x00\x00\x00\x00\x00\xec_\'\xc7\xaa|\xd8?\x00\x00\x00\x00\x00\x00\x00\x00\xf6\xfa\xffD\xb4\x85\xd8?\x00\x00\x00\x00\x00\x00\x00\x00\x12\x0b\xba\xf6\x89\x9b\xde?\x00\x00\x00\x00\x00\x00\x00\x00'
p15
tp16
bsS'author'
p17
S'AAP'
p18
sS'electronic energy'
p19
F-845.25648514500006
sS'version'
p20
I2
sS'calculation script'
p21
S"#!/usr/bin/env python\n\n#LSF -q suncat-medium -o opt.log -n 8\n\nfrom ase.all import *\nfrom ase.calculators import jacapo as jp\nfrom ase.vibrations import Vibrations\nimport numpy as np\n\nmolecule = read('final.traj')[-9:]\n\n# Create the molecule\ncell=[15.0,15.1,15.2]\n\nmolecule.set_cell(cell)\nmolecule.center()\n\n# Slight rotation to break any artificial symmetry.\nmolecule.rotate('x',pi/34.)\nmolecule.rotate('y',pi/35.)\nmolecule.rotate('z',pi/36.)\nmolecule.rattle()\n\n\ncalc = jp.Jacapo(nc='out.nc', #nc output file\n                 pw=340.15, #planewave cutoff\n                 dw=500.00, #density cutoff\n                 nbands=15, # number of bands\n                 kpts=(1,1,1), # k points\n                 xc='RPBE', #exchange correlation method\n                 ft=0.01, #Fermi temperature\n                 symmetry=False,\n                 spinpol=False,\n                 stay_alive=True,\n                 dipole={'status':True,\n                         'mixpar':0.2,\n                         'initval':0.0},\n                )\n# calc.set_psp(sym='Pb',psp='/home/camp/anpet/common/uspp/pb_ps.uspp')\n# ^ what is this?\n\nmolecule.set_calculator(calc)\n\n# Manually set nbands to be at least 10 (otherwise use same formula).\n# This is because otherwise H2 won't converge with 5 bands.\n#nvalence = calc.get_valence()\n#nbands = calc.get_valence()*0.65 + 4\n#nbands = np.ceil(nbands)\n#if nbands < 10:\n#    nbands = 10\n#calc.set_nbands(nbands)\n\ndyn = QuasiNewton(molecule,logfile='qn.log',trajectory='qn.traj')\ndyn.run(fmax=0.05)\n\ne_adsorbed = molecule.get_potential_energy()\nprint e_adsorbed\n\nf = open('out.energy','w')\nf.write(str(e_adsorbed))\nf.close()\n\n\n# Calculate vibrations\nvib = Vibrations(molecule)\nvib.run()\nvib.summary(method='standard')\n\n# Make trajectory files to visualize the modes.\nfor mode in range(len(molecule)*3):\n    vib.write_mode(mode)\n\n\n"
p22
sS'atomslist'
p23
(lp24
(S'O'
p25
g2
(g3
(I0
tp26
g5
tp27
Rp28
(I1
(I3
tp29
g9
(S'f8'
p30
I0
I1
tp31
Rp32
(I3
S'<'
p33
NNNI-1
I-1
I0
tp34
bI00
S'\x04\xfa/]B\xdf @\x8fK\xcbp\x90g\x19@n#\x9d\xc6\x8eZ\x1c@'
p35
tp36
btp37
a(S'C'
p38
g2
(g3
(I0
tp39
g5
tp40
Rp41
(I1
(I3
tp42
g32
I00
S'\xc6D\x9b\x1bB{\x1a@\x90:\xe6O\xe5a\x1f@\xf6\t1=\x02$\x1e@'
p43
tp44
btp45
a(g38
g2
(g3
(I0
tp46
g5
tp47
Rp48
(I1
(I3
tp49
g32
I00
S'3\xfc\x8d\xb0\x9e9 @\xb7\x12\xc0\x8a\xb4z\x1e@W\xeeH\xa0g\xb9\x1e@'
p50
tp51
btp52
a(S'H'
p53
g2
(g3
(I0
tp54
g5
tp55
Rp56
(I1
(I3
tp57
g32
I00
S'\x8a\x96n\xa2(V\x19@l_O\x08\xcc\x9d!@\xa7\xbe\x1d\xad\x04\xee\x1f@'
p58
tp59
btp60
a(g53
g2
(g3
(I0
tp61
g5
tp62
Rp63
(I1
(I3
tp64
g32
I00
S'`\x9f?\xb2\x958\x18@\xab\x87\xc0Z\xe81\x1c@\xd0\xbb{Ax\x13 @'
p65
tp66
btp67
a(g53
g2
(g3
(I0
tp68
g5
tp69
Rp70
(I1
(I3
tp71
g32
I00
S'\xd9\x89\xbb\nPW!@\xbb\xcd]\xfb\xe6\xdd @\x1d>\x0eP\xc9\xb9\x1c@'
p72
tp73
btp74
a(g53
g2
(g3
(I0
tp75
g5
tp76
Rp77
(I1
(I3
tp78
g32
I00
S'8K@u\xef\xca @\xbc*\xba\xaaA\x85\x1e@*a}\xfe\xf3\x7f!@'
p79
tp80
btp81
a(g53
g2
(g3
(I0
tp82
g5
tp83
Rp84
(I1
(I3
tp85
g32
I00
S'eM\xd6\x10\x19\xce"@\xb6\xd2\xe9\x14`\xdb\x18@\x93K\x1b\xa0\xb6\x9d\x1c@'
p86
tp87
btp88
a(g53
g2
(g3
(I0
tp89
g5
tp90
Rp91
(I1
(I3
tp92
g32
I00
S'\xf646\x98\xfcQ\x19@=\xdb\xd1\xd6Nm\x1f@5\x87\x95\xf7;\xe7\x19@'
p93
tp94
btp95
asS'path'
p96
S'/a/suncatfs1/u1/montoyjh/MAIN/PAR_NEB/gas_phase_products/ethanol'
p97
s.